## 과제 개요

이번 수업에서 CSS의 기본 문법, 적용 방법(내부, 외부, 인라인), 기본 선택자(`*`, 태그, `.class`, `#id`), 속성 선택자(`[attribute]`), 후손/자식 선택자(`>`, 공백), 그리고 가상 클래스(`:hover`, `:first-child`) 및 가상 요소(`::after`)에 대해 배웠습니다. 이번 과제는 HTML 사용자 등록 폼 페이지를 CSS로 스타일링하여 시각적으로 개선하는 것입니다. 기본 과제를 통해 CSS 선택자와 속성을 연습하고, **도전 과제**를 통해 가상 클래스와 가상 요소를 활용한 고급 스타일링에 도전합니다.

## 기본 과제 요구사항

1. **HTML 페이지 (register.html)**
    - 이전 수업에서 만든 사용자 등록 폼을 기반으로 하거나, 아래 구조를 참고하여 새로 작성하세요:
        - register.html 예시
            
            ```html
            <!DOCTYPE html>
            <html lang="en">
            <head>
              <meta charset="UTF-8">
              <title>User Registration Form</title>
              <link rel="stylesheet" href="styles.css">
            </head>
            <body>
              <h1>User Registration</h1>
              <form action="#" method="POST">
                <p>
                  <label for="name">Name:</label>
                  <input type="text" id="name" name="name">
                </p>
                <p>
                  <label for="email">Email:</label>
                  <input type="email" id="email" name="email">
                </p>
                <p>
                  <label for="password">Password:</label>
                  <input type="password" id="password" name="password">
                </p>
                <p>
                  <label for="birthdate">Birthdate:</label>
                  <input type="date" id="birthdate" name="birthdate">
                </p>
                <p>
                  <label for="age">Age:</label>
                  <input type="number" id="age" name="age" min="18" max="100">
                </p>
                <p>
                  <label for="satisfaction">Satisfaction:</label>
                  <input type="range" id="satisfaction" name="satisfaction" min="1" max="10">
                </p>
                <p>
                  <label>Sex:</label><br>
                  <input type="radio" id="male" name="sex" value="male">
                  <label for="male">Male</label>
                  <input type="radio" id="female" name="sex" value="female">
                  <label for="female">Female</label>
                  <input type="radio" id="other" name="sex" value="other">
                  <label for="other">Other</label>
                </p>
                <p>
                  <label>Interests:</label><br>
                  <input type="checkbox" id="coding" name="interests" value="coding">
                  <label for="coding">Coding</label>
                  <input type="checkbox" id="gaming" name="interests" value="gaming">
                  <label for="gaming">Gaming</label>
                  <input type="checkbox" id="reading" name="interests" value="reading">
                  <label for="reading">Reading</label>
                </p>
                <p>
                  <label for="country">Country:</label>
                  <select id="country" name="country">
                    <option value="kr">South Korea</option>
                    <option value="us">USA</option>
                    <option value="jp">Japan</option>
                    <option value="cn">China</option>
                    <option value="uk">UK</option>
                  </select>
                </p>
                <p>
                  <button type="submit">Submit</button>
                  <button type="reset">Reset</button>
                </p>
              </form>
            </body>
            </html>
            
            ```
            
    - HTML 구조는 위와 유사해야 하며, 모든 입력 요소에 `id`와 `name` 속성을 포함하세요.
2. **CSS 스타일링 (styles.css)**
    - 외부 CSS 파일(`styles.css`)을 사용하여 아래 스타일을 적용하세요:
        - **기본 선택자**:
            - : 모든 요소에 `margin: 0; padding: 0; box-sizing: border-box;` 적용.
            - `.class`: 폼의 각 `<p>` 태그에 `form-group` 클래스를 추가하고, 여백 설정(예: `margin-bottom: 15px;`).
                - 태그 선택자: `<body>`에 배경색(예: `background-color: #f0f0f0;`)과 폰트 설정(예: `font-family: Arial, sans-serif;`) 적용.
            - `#id`: `<form>`에 `id="registration-form"`를 추가하고, 최대 너비와 중앙 정렬 설정(예: `max-width: 500px; margin: 0 auto;`).
        - **속성 선택자**:
            - `[type="text"]`, `[type="email"]`, `[type="password"]`: 입력 필드에 너비(예: `width: 100%;`), 패딩, 테두리(예: `border: 1px solid #ccc;`) 적용.
            - `[type="submit"]`, `[type="reset"]`: 버튼에 배경색, 텍스트 색상, 패딩 적용(예: `background-color: #007bff; color: white; padding: 10px 20px;`).
        - **후손/자식 선택자**:
            - 후손 선택자: `form p`로 폼 내 모든 `<p>`에 스타일 적용(예: `padding: 5px;`).
            - 자식 선택자: `form > p`로 폼의 직계 `<p>`에만 추가 스타일 적용(예: `border-bottom: 1px solid #eee;`).
        - `<label>`: `display: inline-block; width: 100px;`로 라벨을 정렬.
        - `<select>`: 드롭다운 메뉴에 너비와 테두리 스타일 적용.
3. **파일 구조**
    - 프로젝트 폴더를 생성하고, 아래와 같은 구조로 파일을 구성하세요:
        
        ```
        user-form/
        ├── register.html
        ├── styles.css
        
        ```
        

## 도전 과제 (선택)

기본 과제를 완료한 학생들은 아래 도전 과제를 수행하여 가상 클래스(`:hover`, `:first-child`)와 가상 요소(`::after`)를 활용한 고급 스타일링에 도전하세요. 

1. **가상 클래스 활용**
    - `:hover`:
        - 버튼(`[type="submit"]`, `[type="reset"]`)에 마우스를 올리면 배경색이 변경되도록 설정(예: `background-color: #0056b3;`).
        - `<select>`에 마우스를 올리면 테두리 색상이 변경되도록 설정(예: `border-color: #007bff;`).
    - `:first-child`:
        - `form > p:first-child`에 첫 번째 폼 그룹에만 상단 여백 추가(예: `margin-top: 20px;`).
        - `select option:first-child`에 첫 번째 드롭다운 옵션에 다른 스타일 적용(예: `font-weight: bold;`).
2. **가상 요소 활용**
    - `::after`:
        - `<h1>::after`: 제목 뒤에 장식 요소 추가(예: `content: "✨"; margin-left: 10px;`).
        - `.form-group::after`: 각 폼 그룹(`<p class="form-group">`) 뒤에 구분선 역할을 하는 콘텐츠 추가(예: `content: ""; display: block; height: 1px; background: #ddd; margin-top: 10px;`).
    - `<label>::after`: 필수 입력 필드(예: `name`, `email`, `password`)의 라벨 뒤에 빨간색 별표 표시(예: `content: "*"; color: red;`).
3. **도전 과제 파일 구조**
    - 동일한 `styles.css` 파일에 도전 과제 스타일을 추가하세요.

## 주의사항

- **CSS 적용 방법**: 외부 CSS(`styles.css`)를 사용하세요. 인라인 CSS나 내부 CSS(`<style>` 태그)는 사용하지 않습니다.
- **선택자 사용**: 모든 요구된 선택자(, 태그, `.class`, `#id`, `[attribute]`, `>`, 공백)를 사용해야 하며, 도전 과제에서는 `:hover`, `:first-child`, `::after`를 추가로 사용하세요.
- **코드 가독성**: CSS 코드는 들여쓰기를 통해 가독성을 높이고, 주석(`/* */`)을 활용해 선택자 그룹(예: 기본 선택자, 속성 선택자, 가상 클래스 등)을 설명하세요.
- **브라우저 호환성**: 작성한 CSS는 최신 브라우저(Chrome, Firefox 등)에서 정상적으로 작동해야 합니다. `:hover`, `:first-child`, `::after`는 표준이므로 별도 접두사는 필요 없습니다.
- **테스트**: HTML과 CSS 파일을 브라우저에서 열어 스타일이 올바르게 적용되는지, 가상 클래스/요소가 동작하는지 확인하세요(예: 버튼 호버 효과, 첫 번째 요소 스타일, `::after` 콘텐츠 표시).
- **파일 연결**: `<link rel="stylesheet" href="styles.css">`로 CSS 파일을 HTML에 연결하세요. 경로가 올바른지 확인하세요.
- **접근성**: 라벨과 입력 필드의 가독성을 위해 적절한 색상 대비(예: 어두운 텍스트에 밝은 배경)를 유지하세요.