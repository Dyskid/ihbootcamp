## 과제 개요

오늘 수업에서 CSS 박스 모델(`content`, `padding`, `border`, `margin`), `display` 속성(`block`, `inline`, `inline-block`, `none`), `position` 속성(`static`, `relative`, `absolute`, `fixed`, `sticky`), `float`와 `clear`, 그리고 `flexbox` 및 `grid` 레이아웃에 대해 배웠습니다. 이번 과제는 HTML5 시맨틱 태그(`<header>`, `<nav>`, `<section>`, `<article>`, `<aside>`, `<footer>`)를 사용하여 **개인 포트폴리오 웹페이지**를 제작하고, CSS 박스 모델과 레이아웃 기법을 적용하는 것입니다. 기본 과제에서는 박스 모델, `display`, `position`, `flexbox`, `grid`를 연습하고, **도전 과제**에서는 `float`와 `clear`를 활용한 레이아웃에 도전합니다.

## 기본 과제 요구사항

1. **HTML 페이지 (portfolio.html)**
    - 시맨틱 태그를 사용하여 아래 구조를 기반으로 포트폴리오 페이지를 작성하세요:
        
        ```html
        <!DOCTYPE html>
        <html lang="en">
        <head>
          <meta charset="UTF-8">
          <title>My Portfolio</title>
          <link rel="stylesheet" href="styles.css">
        </head>
        <body>
          <header>
            <h1>My Portfolio</h1>
            <nav>
              <ul>
                <li><a href="#home">Home</a></li>
                <li><a href="#about">About</a></li>
                <li><a href="#projects">Projects</a></li>
                <li><a href="#contact">Contact</a></li>
              </ul>
            </nav>
          </header>
          <section id="about">
            <h2>About Me</h2>
            <p>Introduce yourself here. (50~100 words)</p>
          </section>
          <section id="projects">
            <h2>My Projects</h2>
            <article class="project">
              <h3>Project 1</h3>
              <p>Brief description of project 1.</p>
            </article>
            <article class="project">
              <h3>Project 2</h3>
              <p>Brief description of project 2.</p>
            </article>
            <article class="project">
              <h3>Project 3</h3>
              <p>Brief description of project 3.</p>
            </article>
          </section>
          <aside>
            <h3>Skills</h3>
            <ul>
              <li>HTML</li>
              <li>CSS</li>
              <li>JavaScript</li>
            </ul>
          </aside>
          <footer>
            <p>Contact: email@example.com</p>
            <p>© 2025 My Portfolio</p>
          </footer>
        </body>
        </html>
        
        ```
        
    - `<section>`은 최소 2개(About, Projects), `<article>`은 최소 3개 프로젝트를 포함하세요.
    - `<nav>`는 최소 4개의 메뉴 항목을 포함하며, `<a>` 태그의 `href`는 섹션 ID(예: `#about`)를 참조하거나 `#`로 설정하세요.
2. **CSS 스타일링 (styles.css)**
    - 외부 CSS 파일(`styles.css`)을 사용하여 아래 박스 모델과 레이아웃 기법을 적용하세요:
        - **박스 모델**:
            - `<header>`: `padding: 20px;`, `border-bottom: 2px solid #333;`, `margin-bottom: 20px;`.
            - `.project`: `padding: 15px;`, `border: 1px solid #ccc;`, `margin: 10px 0;`.
            - `<aside>`: `padding: 10px;`, `border-left: 3px solid #007bff;`, `margin: 20px;`.
        - **display 속성**:
            - `<nav ul>`: `display: flex;`로 내비게이션 메뉴를 가로로 배치.
            - `<nav ul li>`: `display: inline-block;`으로 메뉴 항목을 가로 정렬.
            - `<footer p>`: 첫 번째 문단에 `display: none;`을 적용하여 숨김(선택 사항).
        - **position 속성**:
            - `<header>`: `position: sticky; top: 0;`으로 스크롤 시 상단에 고정.
            - `<aside>`: `position: relative;`로 설정하고, 내부 `<h3>`에 `position: absolute; top: 10px; right: 10px;` 적용 가능.
        - **flexbox**:
            - `<nav ul>`: `display: flex; justify-content: space-around; align-items: center;`으로 메뉴를 고르게 배치.
            - `#projects`: `display: flex; flex-wrap: wrap; gap: 20px;`으로 프로젝트 카드를 유연하게 배치.
        - **grid**:
            - `#projects`: `display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 20px;`으로 프로젝트를 그리드 형태로 배치.
        - **기타 스타일**:
            - `<body>`: `max-width: 1200px; margin: 0 auto; font-family: Arial, sans-serif;`.
            - `<a>`: `text-decoration: none; color: #007bff;`으로 링크 스타일링.
            - `<h1>`, `<h2>`, `<h3>`: 적절한 폰트 크기(예: `font-size: 2em;`, `1.5em`, `1.2em`)와 여백 설정.
3. **파일 구조**
    - 프로젝트 폴더를 생성하고, 아래와 같은 구조로 파일을 구성하세요:
        
        ```
        portfolio/
        ├── portfolio.html
        ├── styles.css
        
        ```
        

## 도전 과제 (선택)

기본 과제를 완료한 학생들은 아래 도전 과제를 수행하여 `float`와 `clear`를 활용한 레이아웃에 도전하세요. 

1. **float와 clear 활용**
    - `<aside>`: `float: right; width: 25%;`으로 사이드바를 오른쪽에 배치.
    - `<section>`: `float: left; width: 70%;`으로 콘텐츠 영역을 왼쪽에 배치.
    - `<footer>`: `clear: both;`을 사용하여 `float` 영향을 제거하고, 푸터가 페이지 하단에 올바르게 배치되도록 설정.
    - `.project`: 각 프로젝트(`<article class="project">`)에 `float: left; width: 30%; margin: 1.66%;`을 적용하여 3열 레이아웃을 구현(화면 너비에 따라 조정 가능).
    - `<nav ul li>`: `float: left; margin-right: 20px;`으로 내비게이션 메뉴 항목을 가로로 배치하고, `clear: left;`를 적절히 사용하여 겹침 방지.
2. **도전 과제 파일 구조**
    - 동일한 `styles.css` 파일에 도전 과제 스타일을 추가하세요.

## 주의사항

- **시맨틱 태그 사용**: `<header>`, `<nav>`, `<section>`, `<article>`, `<aside>`, `<footer>`를 의미에 맞게 사용하세요.
- **박스 모델 적용**: 모든 주요 요소에 `padding`, `border`, `margin`을 명시적으로 설정하여 박스 모델을 연습하세요. `box-sizing: border-box;`를  선택자로 적용해 계산 편의를 유지하세요.
- **레이아웃 기법**: 기본 과제에서는 `flexbox`와 `grid`를 필수로 사용하고, `float`와 `clear`는 도전 과제에서만 사용하세요.
- **position 속성**: `sticky`와 `relative`/`absolute`를 적어도 한 번씩 사용하세요. `sticky`로 고정된 `<header>`는 스크롤 시 동작을 확인하세요.
- **코드 가독성**: CSS 코드는 들여쓰기를 통해 가독성을 높이고, 주석(`/* */`)을 활용해 섹션(예: 박스 모델, flexbox, grid, float)을 구분하세요.
- **브라우저 테스트**: HTML과 CSS 파일을 최신 브라우저(Chrome, Firefox 등)에서 열어 레이아웃이 의도대로 표시되는지, `sticky` 위치와 `float`/`clear`(도전 과제 수행 시)가 올바른지 확인하세요.
- **파일 연결**: `<link rel="stylesheet" href="styles.css">`로 CSS 파일을 HTML에 연결하고, 경로가 올바른지 확인하세요.